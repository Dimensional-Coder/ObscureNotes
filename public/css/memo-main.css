
@import './memo-animations.css';

/* Color scheme created with https://coolors.co/generate */
:root {
    /* "Oxford blue" */
    --main-bg-color: #010728;

    /* "Persian Indigo" */
    --memo-box-color: #330A85;

    /* "Princeton Orange" */
    /* --main-text-color: #FA8334; */
    --main-text-color: #EE028B;
    --main-text-color-light: #ee028ca2;

    /* "Turquoise Green" */
    --memo-text-color: #AFE3C0;

    --memo-button-color: #7F95D1;
    --memo-button-text-color: tbd;

    --memo-input-color: #ffffff21;
}

body{
    overflow: hidden;
    background-color: var(--main-bg-color);
    color: var(--main-text-color);

    text-align: center;

    font-family: "Segoe UI","Helvetica Neue","Helvetica",Arial,sans-serif;
}

/* Set cursor to "grabbing" when a memo is being dragged */
body.dragging,
body.dragging *
{
    cursor: grabbing !important;
}

/* Simple container to center main page content */
#memo-splash-screen{
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/*
A "screen" is a section that is one view in the application
(this is a single page application)
*/
.memo-screen{
    /*
        position: absolute means all child elements with
        position: absolute also get moved with this element.
        We can also animate it to move offscreen using left/top/etc.
    */
    position: absolute;
    width: 100vw;
    height: 100vh;
}

.screen-active{
    visibility: visible;
    left: 0vw;
    top: 0vh;
}

.screen-inactive{
    visibility: hidden;
    left: 110vw;
    top: 0vh;
}

/* Title */
h1{
    font-size: 5rem;
    font-weight: 350;
    margin-bottom: 10px;
}

.main-subtitle{
    font-size: 1.5rem;
    font-weight: 300;
    color: var(--main-text-color-light);
    margin-top: 10px;
}

.memos-btn{
    /* Remove default browser styling */
    appearance: none;

    font-size: 20px;
    padding: 15px 35px;
    display: block;
    /* background-color: var(--memo-button-color);
    color: var(--main-text-color-light); */

    background-color: var(--memo-box-color);
    color: var(--memo-text-color);
    font-family: inherit;
    border: 1px solid;
    margin: 10px auto 10px auto;
}

#key-submit-btn{
    display: block;
}

button:active {
    transform: scale(0.99);
}

.memo-back-btn{
    width: 50px;
    height: 50px;
    padding: 0;
}

#return-btn{
    position: absolute;
    left: 10px;
    top: 10px;
}

/* Draw a back arrow using pure css */
.back-arrow{
    width: 100%;
    height: 100%;

    clip-path: polygon(
        16.5% 50%, /* Arrow tip */
        50% 16.5%, /* top */
        56% 22.5%,
        32.5% 45.8%,
        83.3% 45.8%, /* Base of arrow top */
        83.3% 54%, /* Base of arrow bottom */
        32.5% 54%,
        56% 77.5%,
        50% 83.3%, /* bottom */
        16.5% 50%
    );

    background-color: var(--memo-text-color);
}

#memos-keyphrase-input{
    /* Remove default browser styling */
    appearance: none;

    box-shadow: none;
    text-align: center;
    color: var(--memo-text-color);
    background: linear-gradient(0deg, var(--memo-box-color), transparent, transparent, transparent);
    border: none;
    outline: none;
}

#memos-keyphrase-input:focus{
    appearance: none;
    border: none;
    outline: none;
}

.memos-box{
    padding: 15px;
    position: absolute;

    /* Default position */
    left: 50vw;
    top: 50vh;

    background-color: var(--memo-box-color);
    border-radius: 25% 10%;
    color: var(--memo-text-color);
}

/* Background animation styling */
.memos-bg-box{
    width: 200px;
    height: 150px;

    opacity: 50%;

    top: -30vh;
    z-index: -3;

    animation-duration: 8s;
    animation-name: scroll-loop;
    animation-timing-function: linear;
    animation-iteration-count: infinite;

    animation-delay: 0s;
}

/*
.memo-input-container and .memo-input are a bit hacky.
To have the input fit in the memos-box rounded border,
memo-input-container is resizeable, and memo-input is
scaled to a certain percentage I measured to be inside
the rounded border most of the time.
*/
.memo-input-container{
    width: 200px;
    height: 150px;

    border-radius: 25% 10%;
    background-color: var(--memo-input-color);

    /* flex box to center memo-input vertically */
    display: flex;
    flex-direction: column;
    justify-content: center;

    resize: both;
    overflow: hidden;
}

.memo-input{
    background-color: #00000000;
    border: none;
    width: 87%;
    height: 82%;
    overflow: hidden;
    resize: none;
    margin-left: auto;
    margin-right: auto;

    /* box-sizing: content-box; */

    /* border-radius: 25% 10%;
    border: 5px solid transparent;
    box-sizing: content-box;
    background-color: var(--memo-input-color); */

    color: var(--memo-text-color);

    outline: none;
    /* resize: both;
    overflow: scroll;
    text-align: left; */
    /* overflow: visible; */
    

}

.memos-bg-box-text::before{
    content: "";
    margin: 10px;
    overflow-wrap: anywhere;

    /* animation: populate-text infinite 8s; */
    animation-name: populate-text;
    animation-iteration-count: infinite;
}

/* Default bg box placement and timing */
#memos-bg-box-0{left: 5vw; animation-delay: 4s;}
#memos-bg-box-1{left: 25vw; animation-delay: 0s;}
#memos-bg-box-2{left: 50vw; animation-delay: 6s;}
#memos-bg-box-3{left: 75vw; animation-delay: 2s;}
#memos-bg-box-0 .memos-bg-box-text::before{animation-duration: 6s;}
#memos-bg-box-1 .memos-bg-box-text::before{animation-duration: 8s;}
#memos-bg-box-2 .memos-bg-box-text::before{animation-duration: 4s;}
#memos-bg-box-3 .memos-bg-box-text::before{animation-duration: 10s;}

