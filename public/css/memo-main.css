
/**************************************/
/*** Main Obscure Notes style sheet ***/
/**************************************/

@import './memo-animations.css';
@import './memo-drawings.css';


/********************************************************/
/***          Obscure Notes color palette             ***/
/*** Palette created with https://coolors.co/generate ***/
/********************************************************/
:root {
    /* "Oxford blue" */
    --main-bg-color: #010728;

    /* "Persian Indigo" */
    --memo-box-color: #330A85;

    /* "Princeton Orange" */
    /* --main-text-color: #FA8334; */
    --main-text-color: #EE028B;
    --main-text-color-light: #ee028ca2;

    /* "Turquoise Green" */
    --memo-text-color: #AFE3C0;

    --memo-button-color: #7F95D1;
    --memo-button-text-color: tbd;

    --memo-input-color: #ffffff21;

    --box-static-border: 50px 20px;
    --box-scaling-border: 25% 10%;
}

/***********************/
/*** General styling ***/
/***********************/
body{
    overflow: hidden;
    background-color: var(--main-bg-color);
    color: var(--main-text-color);

    text-align: center;

    font-family: "Segoe UI","Helvetica Neue","Helvetica",Arial,sans-serif;
}

/* Set cursor to "grabbing" when a memo is being dragged */
body.dragging,
body.dragging *
{
    cursor: grabbing !important;
}


/**********************/
/*** Screen styling ***/
/**********************/

/* A "screen" is a section that is one view in the application */
.memo-screen{
    /* position: absolute means all child elements with
       position: absolute also get moved with this element.
       We can also animate it to move offscreen using left/top/etc */
    position: absolute;
    width: 100vw;
    height: 100vh;
}

.screen-active{
    visibility: visible;
    left: 0vw;
    top: 0vh;
}

.screen-inactive{
    visibility: hidden;
    left: 110vw;
    top: 0vh;
}

/*****************************/
/*** Splash screen styling ***/
/*****************************/

/* Simple container to center main page content */
#memo-splash-screen{
    display: flex;
    flex-direction: column;
    justify-content: center;
}

#memos-start-key-input{
    /* Remove default browser styling */
    appearance: none;

    box-shadow: none;
    text-align: center;
    color: var(--memo-text-color);
    background: linear-gradient(0deg, var(--memo-box-color), transparent, transparent, transparent);
    border: none;
    outline: none;
}

#memos-start-key-input:focus{
    appearance: none;
    border: none;
    outline: none;
}

/* Title */
#memos-main-title{
    font-size: 5rem;
    font-weight: 350;
    margin-bottom: 10px;
}

#memos-main-subtitle{
    font-size: 1.5rem;
    font-weight: 300;
    color: var(--main-text-color-light);
    margin-top: 10px;
}

/* Configure background boxes to animate on splash screen */
.memos-bg-box-text::before{
    content: "";
    margin: 10px;
    overflow-wrap: anywhere;

    /* animation: populate-text infinite 8s; */
    animation-name: populate-text;
    animation-iteration-count: infinite;
}

/* Default background box placement and timing */
#memos-bg-box-0{left: 5vw; animation-delay: 4s;}
#memos-bg-box-1{left: 25vw; animation-delay: 0s;}
#memos-bg-box-2{left: 50vw; animation-delay: 6s;}
#memos-bg-box-3{left: 75vw; animation-delay: 2s;}
#memos-bg-box-0 .memos-bg-box-text::before{animation-duration: 6s;}
#memos-bg-box-1 .memos-bg-box-text::before{animation-duration: 8s;}
#memos-bg-box-2 .memos-bg-box-text::before{animation-duration: 4s;}
#memos-bg-box-3 .memos-bg-box-text::before{animation-duration: 10s;}

/**********************/
/*** Button styling ***/
/**********************/

.memos-btn{
    /* Remove default browser styling */
    appearance: none;

    font-size: 20px;
    padding: 15px 35px;
    display: block;
    /* background-color: var(--memo-button-color);
    color: var(--main-text-color-light); */

    background-color: var(--memo-box-color);
    color: var(--memo-text-color);
    font-family: inherit;
    border: 1px solid;
    margin: 10px auto 10px auto;
}

#memos-start-btn{
    display: block;
}

button:active {
    transform: scale(0.99);
}

.memo-back-btn{
    width: 50px;
    height: 50px;
    padding: 0;
    margin: 0;
}

#memos-return-btn{
    position: absolute;
    left: 10px;
    top: 10px;
}

.memo-delete-btn{
    width: 15px;
    height: 15px;
    padding: 0px;
    background-color: transparent;

    border: none;
    position: absolute;
    margin: 0px;
    right: 6px;
    top: 6px;
}

.memo-add-btn{
    width: 50px;
    height: 50px;
    padding: 0;
    margin: 0;
}

#memo-main-add-btn{
    position: absolute;
    right: 10px;
    bottom: 10px;
}

/********************/
/*** Memo styling ***/
/********************/

.memos-box{
    padding: 15px;
    position: absolute;

    /* Default position */
    /* TODO: generate position in javascript. */
    left: 52vw;
    top: 52vh;

    background-color: var(--memo-box-color);
    /* scaling border, a bit difficult to fit other elements */
    /* border-radius: var(--box-scaling-border); */

    /* fixed border radius */
    border-radius: var(--box-static-border);

    color: var(--memo-text-color);
}

/* Background animation styling */
.memos-bg-box{
    width: 200px;
    height: 150px;

    opacity: 50%;

    top: -30vh;
    z-index: -3;

    animation-duration: 8s;
    animation-name: scroll-loop;
    animation-timing-function: linear;
    animation-iteration-count: infinite;

    animation-delay: 0s;
}

.memo-input-container{
    /* Nothing.... yet */
    /* resize: both;
    overflow: hidden; */

    /* Eliminate whitespace from inline-block */
    /* font-size: 0; */

    /* Got sick of trying to manually do stretching and vertical alignment */
    display: flex;
    align-items: stretch;
}

.memo-input{
    display: inline-block;

    border-radius: var(--box-static-border);
    background-color: var(--memo-input-color);

    border: none;
    min-width: 75px;
    min-height: 50px;

    resize: both;

    /* top | right | bottom | left */
    padding: 15px 16px 15px 15px;
    /* margin: 15px 10px 15px 15px; */

    overflow: hidden;

    /* box-sizing: content-box; */

    color: var(--memo-text-color);

    outline: none;
}

/*************************/
/*** Scrollbar styling ***/
/*************************/

/*
    Current known problems:
      - Scaling the browser causes the scrollbar display to be off by a pixel
      - memo-box position being fractional (ie 50vw) causes circles to display incorrectly
    TODO: Fix these issues.
*/
.memo-scrollbar{
    /* Take up no space on the dom, and displace it to
    overlap with the textarea element. Child elements
    will be drawn normally. */
    width: 0px;
    right: 22px;
    position: relative;

    /* align scrollbar box to be vertically within textarea */
    margin-top: 8px;
    margin-bottom: 27px;

    /* height stretched automatically by flexbox */
    /* height: 100%; */

    margin-left: 5px;

    display: inline-flex;
    flex-direction: column;
}

.memo-scrollbar-component{
    margin: 0;
    padding: 0;

    /* Width must be odd for scrollbar top/bottom to display evenly */
    width: 9px;
    display: inline;
}

.memo-scrollbar-component.drawing-scrollbar-top{
    height: 4px;
}

.memo-scrollbar-component.drawing-scrollbar-bottom{
    height: 4px;
}

.memo-scrollbar-component.drawing-scrollbar-middle{
    /* Height to be computed by js */
}

.scrollbar-inactive{
    visibility: hidden;
}

.scrollbar-active{
    visibility: visible;
}
